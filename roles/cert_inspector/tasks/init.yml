---
- name: Set Local Scanner true if all conditions met
  ansible.builtin.set_fact:
    ci_local_scanner: true
  when:
    - (ci_scan_directories | default([]) | selectattr('path', 'defined') | map(attribute='path') | map('trim') | select('ne', '') | list | length) > 0

- name: Set ci_metrics_aggregate_host
  ansible.builtin.set_fact:
    ci_metrics_aggregate_host: "{{ ci_metrics_aggregate_host | default(inventory_hostname) }}"

- block:
    - name: Check if directories exist and are readable
      ansible.builtin.stat:
        path: "{{ item.path }}"
      loop: "{{ ci_scan_directories }}"
      register: dir_stats
      changed_when: false
      loop_control:
        loop_var: item

    - name: Fail if directory is not found or not readable
      ansible.builtin.fail:
        msg: "Directory {{ item.0.path }} does not exist or is not readable"
      loop: "{{ ci_scan_directories | zip(dir_stats.results) | list }}"
      when:
        - item.0.exit_when_absent | default(default_exit_when_absent)
        - (not item.1.stat.exists) or (not item.1.stat.readable)
      loop_control:
        loop_var: item

    - name: Gather files from directories
      ansible.builtin.find:
        paths: "{{ item.path }}"
        patterns: "{{ item.patterns | default(default_patterns) }}"
        excludes: "{{ item.excludes | default(default_excludes) }}"
        file_type: "{{ item.file_type | default(default_file_type) }}"
        size: "{{ item.max_size | default(default_max_size) }}"
        depth: "{{ item.depth | default(default_scan_depth) }}"
        follow: "{{ not item.ignore_dir_links | default(default_ignore_dir_links) }}"
        recurse: "{{ item.recurse | default(default_recurse) }}"
      loop: "{{ ci_scan_directories }}"
      changed_when: false
      register: found_files

    - name: Flatten found files
      ansible.builtin.set_fact:
        all_files: "{{ found_files.results | map(attribute='files') | flatten }}"

    - name: Get certificate info for each file
      community.crypto.x509_certificate_info:
        path: "{{ item.path }}"
      loop: "{{ all_files }}"
      register: ci_cert_info_temp
      ignore_errors: yes

    - name: Get current time in timestamp
      ansible.builtin.command: date +%s
      register: current_time
      changed_when: false

    - name: Filter certificate results and add hostname
      ansible.builtin.set_fact:
        ci_cert_info: >-
          {{
            ci_cert_info | default([]) + [{
              'item': {'path': item.item.path},
              'not_after': item.not_after,
              'issuer': item.issuer | default({}),
              'subject': item.subject | default({}),
              'subject_alt_name': item.subject_alt_name | default([]),
              'failed': item.failed | default(false),
              'hostname': inventory_hostname,
              'remaining': (item.not_after | to_datetime('%Y%m%d%H%M%SZ')).timestamp() | int - current_time.stdout | int
            }]
          }}
      loop: "{{ ci_cert_info_temp.results }}"
      when: not item.failed | default(false)
      no_log: true

  always:
    - name: Remove unused variables
      ansible.builtin.set_fact:
        "{{ item }}": null
      loop:
        - ci_cert_info_temp
        - dir_stats
        - found_files
        - all_files
      when: vars[item] is defined
      loop_control:
        label: "{{ item }}"

    - name: Set Local Sender true if all conditions met
      ansible.builtin.set_fact:
        ci_local_sender: true
      when:
        - ci_cert_info | default('') | trim | length > 0
        - (ci_cert_info | selectattr('not_after', 'defined') | list | length) > 0
        - ci_metrics_aggregate_host | default('') | trim | length > 0
  when:
    -  ci_local_scanner | default(false)

- block:
    - name: Aggregate certificate info from hosts
      ansible.builtin.set_fact:
        ci_cert_info_aggr: >-
          {{
            groups['all'] | map('extract', hostvars)
            | selectattr('ci_local_sender', 'defined')
            | selectattr('ci_local_sender', 'eq', true)
            | selectattr('ci_metrics_aggregate_host', '==', inventory_hostname)
            | map(attribute='ci_cert_info')
            | sum(start=[])
          }}
  always:
    - name: Set Aggregate metrics true if all conditions met
      ansible.builtin.set_fact:
        ci_aggregate_metrics: true
      when:
        - ci_cert_info_aggr | default('') | trim | length > 0
        - (ci_cert_info_aggr | selectattr('not_after', 'defined') | list | length) > 0

    - name: Set Local Exporter true if all conditions met
      ansible.builtin.set_fact:
         ci_local_exporter: true
      when:
        - ci_aggregate_metrics | default(false)
        - ci_metrics_local_file | default('') | trim | length > 0

    - name: Set Pushgateway Exporter true if all conditions met
      ansible.builtin.set_fact:
        ci_pushgateway_exporter: true
      when:
        - ci_aggregate_metrics | default(false)
        - ci_pushgateway_host | default('') | trim | length > 0
  when:
    - (ci_metrics_local_file | default('') | trim | length > 0) or
      (ci_pushgateway_host | default('') | trim | length > 0)

